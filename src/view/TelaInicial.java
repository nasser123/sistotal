/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Utilidades.ConfigTelas;
import Utilidades.ConnectionFactory;
import Utilidades.Datas;
import controller.OrdemServicoController;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import model.OrdemServico;
import relatorios.ExecutaRelatorio;

/**
 *
 * @author Produção
 */
public class TelaInicial extends javax.swing.JFrame {

    /**
     * Creates new form TelaInicial
     */
    public TelaInicial() {
        initComponents();
        ConfigTelas ct = new ConfigTelas(this);
        ct.carregarConfig(this);
        inicializarParametrosTela();
        this.setResizable(true);

    }

    private void inicializarParametrosTela() {
        jComboBoxOsSelecionada.setVisible(false);
        jComboBoxSituacaoOs.setVisible(false);
        //jRadioButtonTodos.setSelected(true);
        jCheckBoxTodos.setSelected(true);
        jCheckBoxAbertas.setSelected(true);
        jCheckBoxAndamento.setSelected(true);
        jCheckBoxAguardando.setSelected(true);
        jCheckBoxFechada.setSelected(true);
        jCheckBoxEntregue.setSelected(true);
        jCheckBoxPendente.setSelected(true);
        jCheckBoxCancelada.setSelected(true);
        jRadioButtonTodos.setSelected(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        SistotalPUEntityManager = ConnectionFactory.getEntityManager();
        ordemServicoQuery = java.beans.Beans.isDesignTime() ? null : SistotalPUEntityManager.createQuery("SELECT o FROM OrdemServico o order by o.idordemServico desc");
        ordemServicoList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(new java.util.LinkedList(ordemServicoQuery.getResultList()));
        situacaoOsQuery = java.beans.Beans.isDesignTime() ? null : SistotalPUEntityManager.createQuery("SELECT s FROM SituacaoOs s");
        situacaoOsList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : situacaoOsQuery.getResultList();
        ordemServicoTableCellRenderer1 = new Renderizadores.OrdemServicoTableCellRenderer();
        buttonGroup1 = new javax.swing.ButtonGroup();
        colunaHoraRenderer1 = new Renderizadores.ColunaHoraRenderer();
        jPanel1 = new javax.swing.JPanel();
        jButtonOS = new javax.swing.JButton();
        jButtonClientes = new javax.swing.JButton();
        jButtonListaOS = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonVisualizar = new javax.swing.JButton();
        jComboBoxOsSelecionada = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jCheckBoxTodos = new javax.swing.JCheckBox();
        jCheckBoxAbertas = new javax.swing.JCheckBox();
        jCheckBoxAndamento = new javax.swing.JCheckBox();
        jCheckBoxAguardando = new javax.swing.JCheckBox();
        jCheckBoxFechada = new javax.swing.JCheckBox();
        jCheckBoxEntregue = new javax.swing.JCheckBox();
        jButtonFiltrar = new javax.swing.JButton();
        jComboBoxSituacaoOs = new javax.swing.JComboBox();
        jRadioButtonTodos = new javax.swing.JRadioButton();
        jRadioButtonPagos = new javax.swing.JRadioButton();
        jRadioButtonNaoPagos = new javax.swing.JRadioButton();
        jButtonImprimir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jCheckBoxPendente = new javax.swing.JCheckBox();
        jCheckBoxCancelada = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemClientes = new javax.swing.JMenuItem();
        jMenuItemEquipamento = new javax.swing.JMenuItem();
        jMenuOrdensServico = new javax.swing.JMenu();
        jMenuItemListaOS = new javax.swing.JMenuItem();
        jMenuItemNovaOS = new javax.swing.JMenuItem();
        jMenuItemUsuarios = new javax.swing.JMenuItem();
        jMenuItemAtualizar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jButtonOS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/32x32/nova_os.png"))); // NOI18N
        jButtonOS.setMnemonic('N');
        jButtonOS.setText("Nova OS(F3)");
        jButtonOS.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonOS.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonOS.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOSActionPerformed(evt);
            }
        });

        jButtonClientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/32x32/user.png"))); // NOI18N
        jButtonClientes.setMnemonic('c');
        jButtonClientes.setText("Clientes(F6)");
        jButtonClientes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonClientes.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonClientes.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClientesActionPerformed(evt);
            }
        });

        jButtonListaOS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/32x32/2526_32x32.png"))); // NOI18N
        jButtonListaOS.setMnemonic('l');
        jButtonListaOS.setText("Lista OS(F4)");
        jButtonListaOS.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonListaOS.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonListaOS.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButtonListaOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListaOSActionPerformed(evt);
            }
        });

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, ordemServicoList, jTable1);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idordemServico}"));
        columnBinding.setColumnName("Código");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dataAbertura}"));
        columnBinding.setColumnName("Abertura");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idcliente.nome}"));
        columnBinding.setColumnName("Nome");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idequipamento.descricao}"));
        columnBinding.setColumnName("Equipamento");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${marca}"));
        columnBinding.setColumnName("Marca");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idsituacaoOs.descricao}"));
        columnBinding.setColumnName("Situação");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${dataTermino}"));
        columnBinding.setColumnName("Entrega");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${valor}"));
        columnBinding.setColumnName("Valor");
        columnBinding.setColumnClass(java.math.BigDecimal.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idtipoServico.descricao}"));
        columnBinding.setColumnName("Local");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${pago}"));
        columnBinding.setColumnName("Pago");
        columnBinding.setColumnClass(Boolean.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idusuario.nome}"));
        columnBinding.setColumnName("Responsavel");
        columnBinding.setColumnClass(String.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${data_agendamento}"));
        columnBinding.setColumnName("Agendamento");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${hora_agendamento}"));
        columnBinding.setColumnName("Hora");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTable1MouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(50);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable1.getColumnModel().getColumn(1).setMinWidth(80);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(80);
            jTable1.getColumnModel().getColumn(3).setMinWidth(100);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(5).setMinWidth(100);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(5).setMaxWidth(100);
            jTable1.getColumnModel().getColumn(5).setCellRenderer(ordemServicoTableCellRenderer1);
            jTable1.getColumnModel().getColumn(6).setMinWidth(85);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(85);
            jTable1.getColumnModel().getColumn(6).setMaxWidth(85);
            jTable1.getColumnModel().getColumn(7).setMinWidth(50);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(7).setMaxWidth(80);
            jTable1.getColumnModel().getColumn(8).setMinWidth(80);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(8).setMaxWidth(80);
            jTable1.getColumnModel().getColumn(8).setCellRenderer(ordemServicoTableCellRenderer1);
            jTable1.getColumnModel().getColumn(9).setMinWidth(50);
            jTable1.getColumnModel().getColumn(9).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(9).setMaxWidth(50);
            jTable1.getColumnModel().getColumn(11).setMinWidth(80);
            jTable1.getColumnModel().getColumn(11).setPreferredWidth(80);
            jTable1.getColumnModel().getColumn(11).setMaxWidth(80);
            jTable1.getColumnModel().getColumn(12).setMinWidth(60);
            jTable1.getColumnModel().getColumn(12).setPreferredWidth(60);
            jTable1.getColumnModel().getColumn(12).setMaxWidth(60);
            jTable1.getColumnModel().getColumn(12).setCellRenderer(colunaHoraRenderer1);
        }

        jButtonVisualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/32x32/visualiza_os.png"))); // NOI18N
        jButtonVisualizar.setMnemonic('v');
        jButtonVisualizar.setText("Visualiza");
        jButtonVisualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonVisualizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonVisualizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable1, org.jdesktop.beansbinding.ELProperty.create("${selectedElement!=null}"), jButtonVisualizar, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButtonVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVisualizarActionPerformed(evt);
            }
        });

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, ordemServicoList, jComboBoxOsSelecionada);
        bindingGroup.addBinding(jComboBoxBinding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable1, org.jdesktop.beansbinding.ELProperty.create("${selectedElement}"), jComboBoxOsSelecionada, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        jLabel1.setText("Ordens de Serviço");

        jCheckBoxTodos.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBoxTodos.setText("Todas");
        jCheckBoxTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxTodosActionPerformed(evt);
            }
        });

        jCheckBoxAbertas.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBoxAbertas.setText("Abertas");
        jCheckBoxAbertas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAbertasActionPerformed(evt);
            }
        });

        jCheckBoxAndamento.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBoxAndamento.setText("Andamento");
        jCheckBoxAndamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAndamentoActionPerformed(evt);
            }
        });

        jCheckBoxAguardando.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBoxAguardando.setText("Aguardando Cliente");
        jCheckBoxAguardando.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAguardandoActionPerformed(evt);
            }
        });

        jCheckBoxFechada.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBoxFechada.setText("Fechada");
        jCheckBoxFechada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxFechadaActionPerformed(evt);
            }
        });

        jCheckBoxEntregue.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBoxEntregue.setText("Entregue");
        jCheckBoxEntregue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxEntregueActionPerformed(evt);
            }
        });

        jButtonFiltrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/32x32/6115_32x32.png"))); // NOI18N
        jButtonFiltrar.setMnemonic('a');
        jButtonFiltrar.setText("Atualizar(F5)");
        jButtonFiltrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFiltrarActionPerformed(evt);
            }
        });

        jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, situacaoOsList, jComboBoxSituacaoOs);
        bindingGroup.addBinding(jComboBoxBinding);

        jRadioButtonTodos.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(jRadioButtonTodos);
        jRadioButtonTodos.setText("Pagos e não pagos");
        jRadioButtonTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonTodosActionPerformed(evt);
            }
        });

        jRadioButtonPagos.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(jRadioButtonPagos);
        jRadioButtonPagos.setText("Somente Pagos");
        jRadioButtonPagos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonPagosActionPerformed(evt);
            }
        });

        jRadioButtonNaoPagos.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(jRadioButtonNaoPagos);
        jRadioButtonNaoPagos.setText("Somente não Pagos");
        jRadioButtonNaoPagos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonNaoPagosActionPerformed(evt);
            }
        });

        jButtonImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/32x32/relatorio.png"))); // NOI18N
        jButtonImprimir.setMnemonic('i');
        jButtonImprimir.setText("Imprimir");
        jButtonImprimir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonImprimir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonImprimir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jTable1, org.jdesktop.beansbinding.ELProperty.create("${selectedElement!=null}"), jButtonImprimir, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jButtonImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImprimirActionPerformed(evt);
            }
        });

        jLabel2.setText("Versão: 2.0.9 - 27/02/2018");

        jCheckBoxPendente.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBoxPendente.setText("Pendente");
        jCheckBoxPendente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxPendenteActionPerformed(evt);
            }
        });

        jCheckBoxCancelada.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBoxCancelada.setText("Cancelada");
        jCheckBoxCancelada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxCanceladaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(282, 282, 282)
                                .addComponent(jButtonClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)
                                .addComponent(jButtonListaOS, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(19, 19, 19)
                                .addComponent(jButtonOS, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(210, 210, 210)
                                        .addComponent(jComboBoxSituacaoOs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(123, 123, 123)
                                        .addComponent(jComboBoxOsSelecionada, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel2)))
                                .addGap(63, 63, 63)
                                .addComponent(jButtonImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addComponent(jButtonVisualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 587, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 348, Short.MAX_VALUE)
                                .addComponent(jButtonFiltrar, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBoxTodos, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBoxAbertas, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBoxAndamento, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBoxAguardando, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBoxFechada, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBoxEntregue, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRadioButtonTodos, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRadioButtonPagos, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRadioButtonNaoPagos, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBoxPendente, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBoxCancelada, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(10, 10, 10))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonListaOS, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonOS, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButtonFiltrar))
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jCheckBoxTodos, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jCheckBoxAbertas, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jCheckBoxAndamento, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jCheckBoxAguardando, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxPendente, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxFechada, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxEntregue, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxCancelada, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(jRadioButtonTodos, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jRadioButtonPagos, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jRadioButtonNaoPagos, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jComboBoxSituacaoOs, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jComboBoxOsSelecionada, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(50, 50, 50))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButtonImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonVisualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addContainerGap()))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jMenu1.setText("Cadastros");

        jMenuItemClientes.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F6, 0));
        jMenuItemClientes.setText("Clientes");
        jMenuItemClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemClientesActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemClientes);

        jMenuItemEquipamento.setText("Equipamento");
        jMenuItemEquipamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEquipamentoActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemEquipamento);

        jMenuOrdensServico.setText("Ordens de Serviço");

        jMenuItemListaOS.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, 0));
        jMenuItemListaOS.setText("Lista");
        jMenuItemListaOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemListaOSActionPerformed(evt);
            }
        });
        jMenuOrdensServico.add(jMenuItemListaOS);

        jMenuItemNovaOS.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, 0));
        jMenuItemNovaOS.setText("Nova Ordem de Serviço");
        jMenuItemNovaOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNovaOSActionPerformed(evt);
            }
        });
        jMenuOrdensServico.add(jMenuItemNovaOS);

        jMenu1.add(jMenuOrdensServico);

        jMenuItemUsuarios.setText("Usuários");
        jMenuItemUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemUsuariosActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemUsuarios);

        jMenuItemAtualizar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        jMenuItemAtualizar.setText("Atualizar");
        jMenuItemAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAtualizarActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemAtualizar);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        bindingGroup.bind();

        setSize(new java.awt.Dimension(1317, 745));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClientesActionPerformed
        TelaCadastroCliente tcc = new TelaCadastroCliente();
        tcc.setVisible(true);
    }//GEN-LAST:event_jButtonClientesActionPerformed

    private void jButtonOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOSActionPerformed
        TelaCadastroOrdemServico tosc = new TelaCadastroOrdemServico();
        tosc.setVisible(true);

    }//GEN-LAST:event_jButtonOSActionPerformed

    private void jButtonListaOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListaOSActionPerformed
        TelaListaOS tlo = new TelaListaOS();
        tlo.setVisible(true);
    }//GEN-LAST:event_jButtonListaOSActionPerformed

    private void jButtonVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVisualizarActionPerformed
        OrdemServico os = (OrdemServico) jComboBoxOsSelecionada.getSelectedItem();
        OrdemServicoController osController = new OrdemServicoController();
        try {
            os = osController.pesquisarPorId(os.getIdordemServico());
        } catch (SQLException ex) {
            Logger.getLogger(TelaInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
        TelaCadastroOrdemServico tosc = new TelaCadastroOrdemServico(os);
        tosc.setVisible(true);
        System.gc();
    }//GEN-LAST:event_jButtonVisualizarActionPerformed

    private void jCheckBoxTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxTodosActionPerformed
        if (jCheckBoxTodos.isSelected()) {
            jCheckBoxAbertas.setSelected(true);
            jCheckBoxAndamento.setSelected(true);
            jCheckBoxAguardando.setSelected(true);
            jCheckBoxFechada.setSelected(true);
            jCheckBoxEntregue.setSelected(true);
            jCheckBoxPendente.setSelected(true);
            jCheckBoxCancelada.setSelected(true);
        } else {
            jCheckBoxAbertas.setSelected(false);
            jCheckBoxAndamento.setSelected(false);
            jCheckBoxAguardando.setSelected(false);
            jCheckBoxFechada.setSelected(false);
            jCheckBoxEntregue.setSelected(false);
            jCheckBoxPendente.setSelected(false);
            jCheckBoxCancelada.setSelected(false);
        }

        this.jButtonFiltrarActionPerformed(evt);

    }//GEN-LAST:event_jCheckBoxTodosActionPerformed

    private void jButtonFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFiltrarActionPerformed
        if (!jCheckBoxAbertas.isSelected()
                && !jCheckBoxAndamento.isSelected()
                && !jCheckBoxAguardando.isSelected()
                && !jCheckBoxPendente.isSelected()
                && !jCheckBoxFechada.isSelected()
                && !jCheckBoxEntregue.isSelected()
                && !jCheckBoxCancelada.isSelected()) {
            //JOptionPane.showMessageDialog(rootPane, "Selecione algum tipo de situação de Ordem de Serviço");
        } else {

            String auxSql = "";
            String auxSqlPago = "";
            if (jCheckBoxAbertas.isSelected()) {
                auxSql = auxSql + "1";
            }
            if (jCheckBoxAndamento.isSelected()) {
                auxSql = auxSql + "2";
            }
            if (jCheckBoxFechada.isSelected()) {
                auxSql = auxSql + "3";
            }
            if (jCheckBoxAguardando.isSelected()) {
                auxSql = auxSql + "4";
            }
            if (jCheckBoxEntregue.isSelected()) {
                auxSql = auxSql + "5";
            }
            if (jCheckBoxPendente.isSelected()) {
                auxSql = auxSql + "6";
            }
            if (jCheckBoxCancelada.isSelected()) {
                auxSql = auxSql + "7";
            }

            if (jRadioButtonNaoPagos.isSelected()) {
                auxSqlPago = "0";
            } else if (jRadioButtonPagos.isSelected()) {
                auxSqlPago = "1";
            } else {
                auxSqlPago = "0,1";
            }

            char[] teste = auxSql.toCharArray();
            auxSql = "";
            for (int i = 0; i < teste.length; i++) {

                auxSql = auxSql + teste[i];
                int j = i;
                if (j < (teste.length - 1)) {
                    auxSql = auxSql + ",";
                }
            }
            System.out.println("Antes de limpar " + Datas.getCurrentTime());

            ordemServicoList.clear();
            System.out.println(ordemServicoList.size());
            OrdemServicoController osController = new OrdemServicoController();
            try {
                ordemServicoList.addAll(osController.pesquisarTelaInicial(auxSql, auxSqlPago));
                System.out.println(ordemServicoList.get(ordemServicoList.size()-1).getIdordemServico() + "  --  " + ordemServicoList.get(ordemServicoList.size()-1).getIdsituacaoOs().getDescricao());
                System.out.println("tela: " + Datas.getCurrentTime());
            } catch (SQLException ex) {
                Logger.getLogger(TelaInicial.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_jButtonFiltrarActionPerformed

    private void jCheckBoxAbertasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAbertasActionPerformed
        if (!jCheckBoxAbertas.isSelected()) {
            jCheckBoxTodos.setSelected(false);
        }
        this.jButtonFiltrarActionPerformed(evt);
    }//GEN-LAST:event_jCheckBoxAbertasActionPerformed

    private void jCheckBoxAndamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAndamentoActionPerformed
        if (!jCheckBoxAndamento.isSelected()) {
            jCheckBoxTodos.setSelected(false);
        }
        this.jButtonFiltrarActionPerformed(evt);
    }//GEN-LAST:event_jCheckBoxAndamentoActionPerformed

    private void jCheckBoxAguardandoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAguardandoActionPerformed
        if (!jCheckBoxAguardando.isSelected()) {
            jCheckBoxTodos.setSelected(false);
        }
        this.jButtonFiltrarActionPerformed(evt);
    }//GEN-LAST:event_jCheckBoxAguardandoActionPerformed

    private void jCheckBoxFechadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxFechadaActionPerformed
        if (!jCheckBoxFechada.isSelected()) {
            jCheckBoxTodos.setSelected(false);
        }
        this.jButtonFiltrarActionPerformed(evt);
    }//GEN-LAST:event_jCheckBoxFechadaActionPerformed

    private void jCheckBoxEntregueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxEntregueActionPerformed
        if (!jCheckBoxEntregue.isSelected()) {
            jCheckBoxTodos.setSelected(false);
        }
        this.jButtonFiltrarActionPerformed(evt);
    }//GEN-LAST:event_jCheckBoxEntregueActionPerformed

    private void jTable1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseEntered


    }//GEN-LAST:event_jTable1MouseEntered


    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (evt.getClickCount() > 1) {
            OrdemServico os = (OrdemServico) jComboBoxOsSelecionada.getSelectedItem();
            OrdemServicoController osController = new OrdemServicoController();
            try {
                os = osController.pesquisarPorId(os.getIdordemServico());
            } catch (SQLException ex) {
                Logger.getLogger(TelaInicial.class.getName()).log(Level.SEVERE, null, ex);
            }
            TelaCadastroOrdemServico tosc = new TelaCadastroOrdemServico(os);
            tosc.setVisible(true);
            System.gc();
        }

    }//GEN-LAST:event_jTable1MouseClicked

    private void jRadioButtonTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonTodosActionPerformed
        this.jButtonFiltrarActionPerformed(evt);
    }//GEN-LAST:event_jRadioButtonTodosActionPerformed

    private void jRadioButtonPagosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonPagosActionPerformed
        this.jButtonFiltrarActionPerformed(evt);
    }//GEN-LAST:event_jRadioButtonPagosActionPerformed

    private void jRadioButtonNaoPagosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonNaoPagosActionPerformed
        this.jButtonFiltrarActionPerformed(evt);
    }//GEN-LAST:event_jRadioButtonNaoPagosActionPerformed

    private void jButtonImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImprimirActionPerformed
        OrdemServico os = (OrdemServico) jComboBoxOsSelecionada.getSelectedItem();
        String sistemaOperacional = os.getSistemaOperacional();
        String antiVirus = os.getAntivirus();
        String office = os.getOffice();
        ExecutaRelatorio er = new ExecutaRelatorio();
        er.abrirRelatorioOS(os, sistemaOperacional, antiVirus, office);
        //this.toBack();

    }//GEN-LAST:event_jButtonImprimirActionPerformed

    private void jMenuItemEquipamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEquipamentoActionPerformed
        TelaListaEquipamento tce = new TelaListaEquipamento();
        tce.setVisible(true);
    }//GEN-LAST:event_jMenuItemEquipamentoActionPerformed

    private void jMenuItemClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemClientesActionPerformed
        TelaCadastroCliente tcc = new TelaCadastroCliente();
        tcc.setVisible(true);
    }//GEN-LAST:event_jMenuItemClientesActionPerformed

    private void jMenuItemListaOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemListaOSActionPerformed
        TelaListaOS tlo = new TelaListaOS();
        tlo.setVisible(true);

    }//GEN-LAST:event_jMenuItemListaOSActionPerformed

    private void jMenuItemNovaOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNovaOSActionPerformed
        TelaCadastroOrdemServico tosc = new TelaCadastroOrdemServico();
        tosc.setVisible(true);
    }//GEN-LAST:event_jMenuItemNovaOSActionPerformed

    private void jCheckBoxPendenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxPendenteActionPerformed
        if (!jCheckBoxPendente.isSelected()) {
            jCheckBoxTodos.setSelected(false);
        }
        this.jButtonFiltrarActionPerformed(evt);
    }//GEN-LAST:event_jCheckBoxPendenteActionPerformed

    private void jMenuItemUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemUsuariosActionPerformed
        new TelaCadastroUsuario().setVisible(true);
    }//GEN-LAST:event_jMenuItemUsuariosActionPerformed

    private void jMenuItemAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAtualizarActionPerformed
        this.jButtonFiltrarActionPerformed(evt);
    }//GEN-LAST:event_jMenuItemAtualizarActionPerformed

    private void jCheckBoxCanceladaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxCanceladaActionPerformed
        if (!jCheckBoxCancelada.isSelected()) {
            jCheckBoxTodos.setSelected(false);
        }
        this.jButtonFiltrarActionPerformed(evt);
    }//GEN-LAST:event_jCheckBoxCanceladaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                System.out.println(info.getName());
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    //System.out.println(info.getName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new TelaInicial().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager SistotalPUEntityManager;
    private javax.swing.ButtonGroup buttonGroup1;
    private Renderizadores.ColunaHoraRenderer colunaHoraRenderer1;
    private javax.swing.JButton jButtonClientes;
    private javax.swing.JButton jButtonFiltrar;
    private javax.swing.JButton jButtonImprimir;
    private javax.swing.JButton jButtonListaOS;
    private javax.swing.JButton jButtonOS;
    private javax.swing.JButton jButtonVisualizar;
    private javax.swing.JCheckBox jCheckBoxAbertas;
    private javax.swing.JCheckBox jCheckBoxAguardando;
    private javax.swing.JCheckBox jCheckBoxAndamento;
    private javax.swing.JCheckBox jCheckBoxCancelada;
    private javax.swing.JCheckBox jCheckBoxEntregue;
    private javax.swing.JCheckBox jCheckBoxFechada;
    private javax.swing.JCheckBox jCheckBoxPendente;
    private javax.swing.JCheckBox jCheckBoxTodos;
    private javax.swing.JComboBox jComboBoxOsSelecionada;
    private javax.swing.JComboBox jComboBoxSituacaoOs;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemAtualizar;
    private javax.swing.JMenuItem jMenuItemClientes;
    private javax.swing.JMenuItem jMenuItemEquipamento;
    private javax.swing.JMenuItem jMenuItemListaOS;
    private javax.swing.JMenuItem jMenuItemNovaOS;
    private javax.swing.JMenuItem jMenuItemUsuarios;
    private javax.swing.JMenu jMenuOrdensServico;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButtonNaoPagos;
    private javax.swing.JRadioButton jRadioButtonPagos;
    private javax.swing.JRadioButton jRadioButtonTodos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private java.util.List<model.OrdemServico> ordemServicoList;
    private javax.persistence.Query ordemServicoQuery;
    private Renderizadores.OrdemServicoTableCellRenderer ordemServicoTableCellRenderer1;
    private java.util.List<model.SituacaoOs> situacaoOsList;
    private javax.persistence.Query situacaoOsQuery;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
